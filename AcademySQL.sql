DROP DATABASE AcademyProject
GO

CREATE DATABASE AcademyProject
GO

USE AcademyProject
GO

CREATE TABLE Pictures
(
	Id INT IDENTITY PRIMARY KEY,
	PicturePath NVARCHAR(2048) NOT NULL
);
INSERT INTO Pictures VALUES ('/') -- Default picture is blank

CREATE TABLE Users
(
	Id INT IDENTITY PRIMARY KEY,
	Email NVARCHAR(255) NOT NULL,
	PasswordHash NVARCHAR(255),
	FirstName NVARCHAR(255) NOT NULL,
	LastName NVARCHAR(255) NOT NULL,
	PictureId INT DEFAULT 1,
	FOREIGN KEY (PictureId) REFERENCES Pictures(Id)
);

CREATE TABLE Roles
(
	Id INT IDENTITY PRIMARY KEY,
	Name NVARCHAR(255) NOT NULL
);

CREATE TABLE UserRoles
(
	UserId INT NOT NULL,
	RoleId INT NOT NULL,
	PRIMARY KEY(UserId, RoleId),
	FOREIGN KEY (UserId) REFERENCES Users(Id),
	FOREIGN KEY (RoleId) REFERENCES Roles(Id)
);

CREATE TABLE Category
(
	Id INT IDENTITY PRIMARY KEY,
	Name NVARCHAR(255) NOT NULL,
	IsDeleted BIT NOT NULL DEFAULT 0 -- 1 = True, 0 = False
);

CREATE TABLE Courses
(
	Id INT IDENTITY PRIMARY KEY,
	LecturerId INT NOT NULL,
	CategoryId INT NOT NULL,
	PictureId INT DEFAULT 1,
	CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
	Title NVARCHAR(255) NOT NULL,
	Description NVARCHAR(2048) NOT NULL,
	IsDeleted BIT NOT NULL DEFAULT 0, -- 1 = True, 0 = False
	FOREIGN KEY (PictureId) REFERENCES Pictures(Id),
	FOREIGN KEY (LecturerId) REFERENCES Users(Id),
	FOREIGN KEY (CategoryId) REFERENCES Category(Id)
);

CREATE TABLE WillLearns
(
	Id INT IDENTITY PRIMARY KEY,
	CourseId INT NOT NULL,
	Content NVARCHAR(2048) NOT NULL,
	FOREIGN KEY (CourseId) REFERENCES Courses(Id)
);

CREATE TABLE Requirements
(
	Id INT IDENTITY PRIMARY KEY,
	CourseId INT NOT NULL,
	Content NVARCHAR(2048) NOT NULL,
	FOREIGN KEY (CourseId) REFERENCES Courses(Id)
);

CREATE TABLE Tracks 
(
	Id INT IDENTITY PRIMARY KEY,
	CourseId INT NOT NULL,
	Title NVARCHAR(255) NOT NULL,
	IsDeleted BIT NOT NULL DEFAULT 0, -- 1 = True, 0 = False
	FOREIGN KEY (CourseId) REFERENCES Courses(Id)
);

CREATE TABLE Steps 
(
	Id INT IDENTITY PRIMARY KEY,
	TrackId INT NOT NULL,
	Title NVARCHAR(255) NOT NULL,
	Duration INT NOT NULL,
	Content NVARCHAR(MAX),
	EmbedLink NVARCHAR(2048),
	FOREIGN KEY (TrackId) REFERENCES Tracks(Id)
);

CREATE TABLE Attendance 
(
	CourseId INT NOT NULL,
	UserId INT NOT NULL,
	PRIMARY KEY (CourseId, UserId),
	FOREIGN KEY (CourseId) REFERENCES Courses(Id),
	FOREIGN KEY (UserId) REFERENCES Users(Id)
);

CREATE TABLE ExamQuestions (
    Id INT IDENTITY PRIMARY KEY,
	CourseId INT NOT NULL,
    Content NVARCHAR(2048) NOT NULL,
	IsDeleted BIT NOT NULL DEFAULT 0, -- 1 = True, 0 = False
	FOREIGN KEY (CourseId) REFERENCES Courses(Id)
);

CREATE TABLE ExamOptions (
    Id INT IDENTITY PRIMARY KEY,
    QuestionId INT NOT NULL,
    Content NVARCHAR(2048) NOT NULL,
	FOREIGN KEY (QuestionId) REFERENCES ExamQuestions(Id)
);

CREATE TABLE ExamRightOptions (
	QuestionId INT PRIMARY KEY,
	OptionId INT NOT NULL,
	FOREIGN KEY (QuestionId) REFERENCES ExamQuestions(Id),
	FOREIGN KEY (OptionId) REFERENCES ExamOptions(Id)
);

CREATE TABLE ExamUsers (
    Id INT IDENTITY PRIMARY KEY,
    UserId INT NOT NULL,
    DateOfExam DATETIME NOT NULL DEFAULT GETDATE(),
	FOREIGN KEY (UserId) REFERENCES Users(Id)
);

CREATE TABLE ExamDetails (
    Id INT IDENTITY PRIMARY KEY,
	ExamId INT NOT NULL,
    QuestionId INT NOT NULL,
    OptionId INT NOT NULL,
	FOREIGN KEY (ExamId) REFERENCES ExamUsers(Id),
	FOREIGN KEY (QuestionId) REFERENCES ExamQuestions(Id),
	FOREIGN KEY (OptionId) REFERENCES ExamOptions(Id)
);

CREATE TABLE Blogs
(
	Id INT IDENTITY PRIMARY KEY,
	UserId INT NOT NULL,
	CategoryId INT NOT NULL,
	Title NVARCHAR(255) NOT NULL,
	Content NVARCHAR(MAX) NOT NULL,
	CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
	IsDeleted BIT NOT NULL DEFAULT 0, -- 1 = True, 0 = False
	PictureId INT DEFAULT 1,
	FOREIGN KEY (PictureId) REFERENCES Pictures(Id),
	FOREIGN KEY (UserId) REFERENCES Users(Id),
	FOREIGN KEY (CategoryId) REFERENCES Category(Id)
);

CREATE TABLE BlogComments
(
	Id INT IDENTITY PRIMARY KEY,
	BlogId INT NOT NULL,
	UserId INT NOT NULL,
	Content NVARCHAR(2048) NOT NULL,
	CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
	FOREIGN KEY (BlogId) REFERENCES Blogs(Id),
	FOREIGN KEY (UserId) REFERENCES Users(Id)
);

CREATE TABLE Questions
(
	Id INT IDENTITY PRIMARY KEY,
	UserId INT NOT NULL,
	CategoryId INT NOT NULL,
	Title NVARCHAR(255) NOT NULL,
	Content NVARCHAR(MAX) NOT NULL,
	CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
	IsDeleted BIT NOT NULL DEFAULT 0, -- 1 = True, 0 = False
	FOREIGN KEY (UserId) REFERENCES Users(Id),
	FOREIGN KEY (CategoryId) REFERENCES Category(Id)
);

CREATE TABLE Answers
(
	Id INT IDENTITY PRIMARY KEY,
	QuestionId INT NOT NULL,
	UserId INT NOT NULL,
	Content NVARCHAR(2048) NOT NULL,
	CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
	FOREIGN KEY (QuestionId) REFERENCES Questions(Id),
	FOREIGN KEY (UserId) REFERENCES Users(Id)
);
